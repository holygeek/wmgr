#!/bin/zsh
# fw - find out in which terminal vim is holding the swap file hostage
# Created: Mon Sep 10 15:42:03 MYT 2012
me=`basename $0`

usage() {
  echo "USAGE
  fw [pid|command]

DESCRIPTION
  show from which term.* [pid|command] is running from.
"
}

me=`basename $0`
usage() {
cat <<EOF
NAME
  $me - Show which muxer session is running the given process

SYNOPSIS
  $me [-h] [-f] [pid|cmd]

DESCRIPTION

OPTIONS
  -f
    Pass -f to pgrep - match in command args

  -h
    Show this help message
EOF
}

f=
while getopts fh opt
do
  case "$opt" in
    f) f=-f;;
    h) usage ; exit;;
    \?) echo Unknown option ; exit;;
  esac
done
shift $(($OPTIND -1))

pid=$1
if [ -z "$pid" ]; then
  # Default behavior:
  # Search for vim's E325 message through all muxer sessions
  for term in `mux list name`; do
    pid=`dump $term|grep 'process ID: [0-9][0-9]* (still running)'|sed -e 's/.*: \([0-9]\+\) .*/\1/'`
    if [ -n "$pid" ]; then
      break
    fi
  done
fi

if [ -z "$pid" ]; then
  usage
  exit 1
fi

case $1 in
	  # Select the newest process
  [a-z.\]\[]*)
    pid=`pgrep $f -o "$1"`
    if [ -z "$pid" ]; then
      echo "$me: No such task: $1"
    fi
  ;;
esac

# echo pid: $pid
TERM_NAME=
eval `cat /proc/$pid/environ|tr '\000' '\n'|grep -E '^(TERM_NAME|WINDOW|TMUX_PANE|SHLVL)='`
if [ -n "$TERM_NAME" ]; then
  goto term.$TERM_NAME[1]
  echo mux goto $TERM_NAME $WINDOW $TMUX_PANE
  # $WINDOW is unique to screen - it is empty in tmux
  # $TMUX_PANE is unique to tmux - it is empty in screen
  mux goto $TERM_NAME $WINDOW $TMUX_PANE
fi
