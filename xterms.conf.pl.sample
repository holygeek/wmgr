{
  my ($root_width, $root_height, $root_x, $root_y)
      = `xwininfo -root`
      =~ /-geometry ([0-9]+)x([0-9]+)([+-][0-9]+)([+-][0-9]+)/;
  my $xft_metric_regex = join("\n",
	"XFTM_ASCENT=([0-9]+);",
	"XFTM_DESCENT=([0-9]+);",
	"XFTM_HEIGHT=([0-9]+);",
	"XFTM_MAX_ADVANCE=([0-9]+);",
  );

  my $font_spec = `xrdb -query`;
  print STDERR "Could not get font_spec from xrdb\n" if ! $font_spec;
  my ($faceName, $faceSize)
    = $font_spec =~ /.*Term\*faceName:\s*([^\n]+)\n.*Term\*faceSize:\s*([^\n]+)\n/s;
  print STDERR "Could not get faceName and/or faceSize\n"
    if ! $faceName || ! $faceSize;

  my $xft_metric = `xftmetric '$faceName' $faceSize`;
  my ($XFTM_ASCENT, $XFTM_DESCENT, $XFTM_HEIGHT, $XFTM_MAX_ADVANCE)
	  = $xft_metric =~ /$xft_metric_regex/;

  my $H = $XFTM_ASCENT + $XFTM_DESCENT;
  my $W = $XFTM_MAX_ADVANCE;

  # Border Size
  my $bs = 1;

  # Full Width
  my $fw = int($root_width / $W);

  # Full Height
  my $fh = int($root_height / $H);

  # Half Width
  my $hw = $fw/2;

  # Head room.
  my $hr = '+' . ($root_height % $H - $bs - $bs);

  # Comfort Width
  my $cw = 86;

  # Legroom
  my $lr = 15;

  my %config = (
  geometries => {
      hilite => join('', $fw - $cw, 'x', $fh /   2, '-', -$bs, '+', $hr),
      lolite => join('', $fw - $cw, 'x', $fh /   2, '-', -$bs, '-',   0),
      full   => join('', $fw      , 'x', $fh - $lr, '+', -$bs, '+', $hr),
      imp    => join('', $hw      , 'x', $fh - $lr, '+', -$bs, '+', $hr),
      gran   => join('', $hw      , 'x', $fh - $lr, '-', -$bs, '+', $hr),
      rtfm   => join('', $cw      , 'x', $fh      , '-',    0, '-',   0),
      shells => join('', $cw      , 'x', $fh      , '+', -$bs, '-',   0),
      vims   => join('', $cw      , 'x', $fh      , '+',
                     # Place it right next to shells
                     $cw * $W, '-', 0),
      any    => join('',
                     # Fill up remaining space after shells and vims
                     $fw - $cw * 2, 'x', $fh, '-',   -1, '+', $hr),
    }
  );
}
