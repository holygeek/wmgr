#!/usr/bin/env perl
# Created: Wed Nov 28 12:42:28 MYT 2012
use strict;
use warnings;
use Getopt::Std;

sub get_pwd {
	my ($pid) = @_;
	my $shell_cwd = "/dev/shm/$pid.cwd";

	my $pwd;

	my $cwd = readlink "/proc/$pid/cwd";
	if ($cwd) {
		$cwd =~ s:$ENV{HOME}:~:;
		$cwd = "\e[32m$cwd\e[0m";
	} else {
		$cwd = 'UNKNOWN';
	}
	$pwd = $cwd;
	return $pwd;
}

sub usage {
print <<"EOF";
NAME
	dtree - Show the initial \$PWD for each processes (as read from
	        /proc/\$pid/envorin

SYNOPSIS
	dtree <pid>
	dtree <muxer session name>

DESCRIPTION
	Run pstree on given pid or muxer session name, annotate each process
	id with their current directory

OPTIONS
	-H <pattern>
	  Highlight <pattern>

	-h
	  Show this help message

	-p
	  Show the process id

	-s
	  Include parent processes too
EOF
}

my %opts;
# s - include parent processes too
# p - Show process id too
getopts("H:hps", \%opts) or do { usage(); exit 1 };
if (defined $opts{h}) {
	usage();
	exit 0;
}
my $show_parents = defined $opts{s} ? '-s' : '';
my $show_pid = defined $opts{p};
my $opt_highlight = $opts{H};

my $all = ! defined $ARGV[0];

my (@session_names, @PID_OR_SESSION);
my %session_name_for;
if ($all) {
	my $lines = `mux list|awk '{print \$1"."\$2}'`;
	(@PID_OR_SESSION) = $lines =~ m{\s*([0-9]+)\.[a-z]+}gms;
	(@session_names) = $lines =~ m{\s*([0-9]+\.[a-z]+)}gms;
	%session_name_for = map { split /\./ } @session_names;
} else {
	@PID_OR_SESSION = @ARGV;
}

my @output;
my %dirs;
foreach my $pid_or_session (@PID_OR_SESSION) {
	# If muxer session name is given, get pid from the session that matches
	# the session name
	my $output = '';
	my $pid = $pid_or_session;
	if ($pid_or_session !~ /^\d+$/) {
		my $muxer_list = `mux list|awk '{print \$1"."\$2}'`;
		($pid, my $session) = $muxer_list =~ m/(\d+)\.(${pid_or_session}.*)/;
		if (! $pid) {
			print "No muxer session matching '$pid_or_session'\n";
			exit 1;
		}
		$output .= "$pid.$session\n";
	}

	my $tree = `pstree $show_parents -Up $pid`;
	if ($opt_highlight) {
		# Highlight name of processes if requested
		$tree =~ s<($opt_highlight)><\e[31;1m$1\e[0m>gms;
	}
	my $replaced = 0;
	my $len = 0;
	foreach my $pid (keys %session_name_for) {
		my $session_name = $session_name_for{$pid};
		if ($tree =~ /\($pid\)/gms) {
			$len = length($session_name) + 1; # plus dot
			$tree =~ s/\($pid\)/($pid.$session_name)/;
			$replaced = 1;
			last;
		}
	}
	if ($replaced) {
		$tree =~ s/^ /' ' . (' ' x $len)/gmse;
	}

	my @pids = $tree =~ m{\((\d+)\)}gms;

	foreach my $pid (@pids) {
		my $dir = get_pwd($pid);
		next if ! $dir;
		my $replacement = $dir;
		if ($show_pid) {
			$replacement = "$pid\@$dir";
		}
		$tree =~ s{\($pid\)}{($replacement)}gms;
	}

	$output .= $tree;
	push @output, $output;
}
my $output = join("\n", @output);
print $output;
