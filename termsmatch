#!/bin/sh
# Created: Fri Oct  5 10:50:44 MYT 2012
. `dirname $0`/common.sh

me=`basename $0`
usage() {
cat <<EOF
DESCRIPTION
  $me - Show matching text from all attached screen sessions matching BRE <base>
SYNOPSIS
  $me [-dhnv] [-c <prompt>] <base>
OPTIONS
  -a
    When getting terminal output, strip out non-ascii characters (call dump -a)

  -c <prompt regex>
    Show matching commands. Commands are identified using <prompt regex>.
    To make output useful with RPROMPT, anything after and including a sequence
    of 2 or more spaces will be stripped out.

  -d
    Show debugging messages

  -e <session_name>
    Exclude strings from screen sessions that matches *<session_name>*

  -h
    Show this help message

  -l
    Include screen session name in each match shown.

  -n
    Dry run

  -s
    Do not split token, show whole line

  -v
    Verbose output

  -/
    Further limit the output to tokens that look like filenames - the ones that
    matches this pattern: [/:.-_], and strip unlikely characters from them -
    ['"].
EOF
}

debug=
exclude=' '
dry_run=
split="tr ' ' '\n'"
pager=cat
prompt=
limit_to_files=
ascii=
while getopts ac:de:fhlnsv/ opt
do
  case "$opt" in
    a) ascii=-a;;
    c) split="grep '^$OPTARG'|sed -e 's/^$OPTARG//' -e 's/     .*//'";;
    d) debug=t;;
    e) exclude="$OPTARG";;
    h) usage ; exit;;
    l) pager='sed -e "s/^/$session_name: /"';;
    n) dry_run=t;;
    s) split='cat';;
    v) verbose=t;;
    /) limit_to_files=t;;
    \?) echo Unknown option ; exit;;
  esac
done
shift $(($OPTIND -1))

base=$1
if [ -z "$1" ]; then
  exit 0
fi
if [ -n "$limit_to_files" ]; then
  pager="$pager|grep '[/:._-]'|tr \"[\\\`\'()@,]\" '\\n'|grep '.'"
fi

for session_name in `screen -ls|grep '(Attached)'|awk '{print $1}'`; do
  case $session_name in
    *${exclude}*) continue ;;
  esac
  eval "dump $ascii $session_name|$split|grep -- '$base'|$pager"
done | sort -u

